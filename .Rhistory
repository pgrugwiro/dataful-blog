famous_stations <- read_csv("~/london_cycling/Blog/famous_stations.csv")
famous_stations <- read.csv("~/london_cycling/Blog/famous_stations.csv")
View(famous_stations)
View(famous_stations)
library(tidyverse)
library(ggplot2)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges2()
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges()
library(ggridges)
install.packages('ggridges')
library(ggridges)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges()
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges() +
xlim(0, 10000)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges() +
xlim(0, 7000)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon') +
xlim(0, 7000)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 7000)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 5000)
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_bw())
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_classic())
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'maroon', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration') +
ylab("") +
ggtitle('Rental Duration for Top 5 Stations')
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration') +
ylab("") +
ggtitle('Rental Duration for Top 5 Stations')
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.777) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration') +
ylab("") +
ggtitle('Rental Duration for Top 5 Stations')
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration') +
ylab("") +
ggtitle('Rental Duration for Top 5 Stations')
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration (seconds)') +
ylab("") +
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration (seconds)') +
ylab("") +
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.666) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration (seconds)') +
ylab("")
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.888) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration (seconds)') +
ylab("")
famous_stations %>%
ggplot(aes(Duration, StartStation.Name, group = StartStation.Name)) +
geom_density_ridges(fill = 'brown', alpha = 0.777) +
xlim(0, 5000) +
theme_set(theme_minimal())+
xlab('Bike Rental Duration (seconds)') +
ylab("")
library(here)
source(here::here("rmd_config.R"))
library(here)
source(here::here("rmd_config.R"))
library(here)
source(here::here("rmd_config.R"))
library(here)
source(here::here("rmd_config.R"))
library(here)
source(here::here("rmd_config.R"))
library(here)
source(here::here("rmd_config.R"))
library(here)
source(here::here("rmd_config.R"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(tree)
library(gridExtra)
#Import data and look at the rentals distribution:
joint_df <- read.csv('~/london_cycling/Scraping and Cleaning/joint_df.csv')
joint_df %>%
ggplot(aes(log(Rentals.Num)))+
geom_histogram(fill = 'brown4', alpha = .666)
#Filter data to remove severe outliers
joint_df <- joint_df %>%
filter(Rentals.Num < 1500)
#Quick look at the data:
summary(joint_df)
joint_df %>%
ggplot(aes(log(Rentals.Num)))+
geom_histogram(fill = 'brown4', alpha = .666)
head(joint_df)
#Generate a tree for the target variable:
tree_mod <- tree(Rentals.Num ~ Temperature + Relative.Temperature + Wind +
Rel..humidity + Dew.Point + Pressure, data = joint_df)
plot(tree_mod)
text(tree_mod)
#Quick look at temperature alone (aggregate temp)
joint_df %>%
select(Temperature, Rentals.Num) %>%
group_by(Temperature) %>% summarise(Tot_Rent = sum(Rentals.Num)) %>%
ggplot(aes(Temperature, Tot_Rent)) +
geom_point() +
geom_smooth(method = 'loess') +
ylab('Total Rentals')
#Remove non-numeric and correlated variables and make a pairs plot:
joint_df %>%
select(-Time, -Description, -Relative.Temperature, -Dew.Point) %>%
pairs()
##################
#Creating models#
##################
set.seed(1, sample.kind = "Rounding")
test_index <- createDataPartition(y = joint_df$Temperature,
times = 1, p = 0.25, list = FALSE)
#Training and Testing sets:
train_set <- joint_df %>% slice(-test_index)
test_set <- joint_df %>% slice(test_index)
#####
#Linear Model:
fit_lm <- train(Rentals.Num ~ Temperature + Wind +
Rel..humidity, method = 'lm',
data = train_set)
predict_lm <- predict(fit_lm, test_set)
cor.test(test_set$Rentals.Num, predict_lm)
a <- ggplot(test_set, aes(Rentals.Num, predict_lm)) +
geom_point() +
geom_smooth(method = 'lm', col = 'brown')+
xlab('') +
ylab('Predicted Rentals')+
ggtitle('Linear Model')+
theme(plot.title = element_text(size = 8))
#KNN model:
fit_knn <- train(Rentals.Num ~ Temperature + Wind +
Rel..humidity + Pressure, method = 'knn',
tuneGrid = data.frame(k = 20),
data = train_set)
predict_knn <- predict(fit_knn, test_set)
cor.test(test_set$Rentals.Num, predict_knn)
b <- ggplot(test_set, aes(Rentals.Num, predict_knn)) +
geom_point() +
geom_smooth(method = 'lm', col = 'brown')+
xlab('') +
ylab('')+
ggtitle('KNN')+
theme(plot.title = element_text(size = 8))
#Decision Trees:
fit_rpart <- train(Rentals.Num ~ Temperature + Wind +
Rel..humidity + Pressure, method = 'rpart',
tuneGrid = data.frame(cp = 0.001),
data = train_set)
predict_rpart <- predict(fit_rpart, test_set)
cor.test(test_set$Rentals.Num, predict_rpart)
c <- ggplot(test_set, aes(Rentals.Num, predict_rpart)) +
geom_point() +
geom_smooth(method = 'lm', col = 'brown')+
xlab('Actual Rentals') +
ylab('Predicted Rentals') +
ggtitle('Decision Trees')+
theme(plot.title = element_text(size = 8))
#Pick random weather parameters to predict:
predict_values <- data.frame(Temperature = 5, Wind = 6,
Rel..humidity = .76, Pressure = 1019)
#Predict using one of the models:
predict(fit_knn, predict_values)
rnorm(20)
x = rnorm(20)
sd(x)
mean(x)
rnorm(100)
x <- rnorm(100)
mean(x)
sd(x)
x <- rnorm(1000)
mean(x)
sd(x)
qnorm(.95)
sample <- read.csv("C:\Users\philg\Downloads\sample.csv")
sample <- read.csv("C:/Users/philg/Downloads/sample.csv")
View(sample)
View(sample)
View(sample)
View(sample)
str(sample)
mod_1 <- lm(hon, data = sample)
mod_1 <- lm(hon~., data = sample)
table(sample$hon)
View(mod_1)
mod_1 <- lm(sample$hon)
mod_1 <- lm(hon~hon, data = sample)
summary(mod_1)
mod_1 <- glm(hon~hon, data = sample)
table(sample$hon)
summary(mod_1)
exp(coef(mod_1))
mod_1 <- glm(hon~1, data = sample)
summary(mod_1)
mod_1 <- lm(hon~1, data = sample)
summary(mod_1)
log(.245)
log(.3245)
mod_1 <- glm(hon~1, data = sample, family = "binomial")
summary(mod_1)
mod_2 <- glm(hon~female, data = sample, family = "binomial")
summary(mod_2)
table(sample$hon, sample$female)
exp(coef(mod_2))
exp(.15634)
mod_3 <- glm(hon~math+female+read, data = sample, family = 'binomial')
summary(mod_3)
rm(list = ls())
